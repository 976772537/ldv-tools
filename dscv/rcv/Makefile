
# Configuration
backends=blast cpachecker
frontends=$(backends)

# Compilation
all: $(patsubst %,backends/%-subdir-all,$(backends))
	@echo RCV backends don\'t require compilation

# Installation
export rcv_install_dir=$(dscv_install_dir)/rcv
frontend_target=$(rcv_install_dir)/$1
backend_install_dir=$(rcv_install_dir)/backends/$1

install: $(patsubst %,backends/%-subdir-install,$(backends)) $(foreach frontend,$(frontends),$(call frontend_target,$(frontend)))

clean: $(patsubst %,backends/%-subdir-clean,$(backends))

$(rcv_install_dir)/blast: blast
	@mkdir -p $(@D)
	cp $^ $@
	@chmod +x $@

$(rcv_install_dir)/cpachecker: cpachecker
	@mkdir -p $(@D)
	cp $^ $@
	@chmod +x $@
	
define mksubdir
$1-subdir-%:
	prefix=$(rcv_install_dir)/$1 $$(MAKE) -C $1 $$*

endef

# Unit-testing
test_backends=mock

# First part of unit-testing subsystem is installing mock objects for DSCV
mockinstall: backends/mock-subdir-install $(call frontend_target,mock)

$(rcv_install_dir)/mock: mock
	@mkdir -p $(@D)
	cp $^ $@
	@chmod +x $@


.PHONY: mockinstall

# Create subdir wrappers for backends
all_backends=$(backends) $(test_backends)
$(foreach backend,$(all_backends),$(eval $(call mksubdir,backends/$(backend))))

