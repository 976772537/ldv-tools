<?php

include 'general.php';

// Get all infomation to be displayed.
$results = $this->entries;

// Get the view name.
$page = $results['Page'];
$globals = $results['Globals'];

$resultsNumb = count($results['Comparison stats']['Row info']);
echo "<h3>Comparison statistics for the page '$page' (" . $resultsNumb . " rows)</h3>";

echo "<div>Note that the first part of the verdict conversions corresponds to the referenced task verdict.</div>";

// Print general comparison statistics table if so.
if ($resultsNumb) {
  // At the beginning print javascript plugin to show/hide some comparison
  // statistics parts.
  echo "<br>";

  // Print show/hide plugin for action menu itself. By default it's hidden.'
  echo "<script type='text/javascript'>
          $(document).ready(function() {
            $('#SCActionMenuHeader').toggle(function() {
              $('#SCActionMenu').show();
              return false;
            } , function() {
              $('#SCActionMenu').hide();
              return false;
            });
          });
        </script>";

  echo "<a href='#' id='SCActionMenuHeader'>Action menu</a>";

  // Print show/hide plugin for different kinds and types of conversions.
  echo "<script type='text/javascript'>
          $(document).ready(function() {
            $('.SCFromToShowHide').click(function() {
              var entityMenuId = $(this).attr('id');
              var entityMenuIdClassVerdict = entityMenuId.split('_');

              if (entityMenuIdClassVerdict[0] == 'SCFrom' || entityMenuIdClassVerdict[0] == 'SCTo') {
                entityClass = '.' + entityMenuIdClassVerdict[0] + '_' + entityMenuIdClassVerdict[1];
                if (this.checked) {
                  $(entityClass).show();
                }
                else {
                  $(entityClass).hide();
                }
              }
              else if (entityMenuIdClassVerdict[0] == 'SCFromToTheSame' && entityMenuIdClassVerdict[1]) {
                entityClass1 = '.SCFrom_' + entityMenuIdClassVerdict[1];
                entityClass2 = '.SCTo_' + entityMenuIdClassVerdict[1];
                if (this.checked) {
                  $(entityClass1 + entityClass2).show();
                }
                else {
                  $(entityClass1 + entityClass2).hide();
                }
              }
            });
          });
        </script>
        <script type='text/javascript'>
          $(document).ready(function() {
            $('.SCFromToShowHide').click(function() {
              var entityMenuId = $(this).attr('id');
              var entityMenuIdClassVerdict = entityMenuId.split('_');

              if (entityMenuIdClassVerdict[0] == 'SCFromTo') {
                entityId1 = '#SCFrom_' + entityMenuIdClassVerdict[1];
                entityId2 = '#SCTo_' + entityMenuIdClassVerdict[1];
                if (this.checked) {
                  $(entityId1).attr('checked', true).click().attr('checked', true);
                  $(entityId2).attr('checked', true).click().attr('checked', true);
                }
                else {
                  $(entityId1).attr('checked', false).click().attr('checked', false);
                  $(entityId2).attr('checked', false).click().attr('checked', false);
                }
              }
              else if (entityMenuIdClassVerdict[0] == 'SCFromToTheSame' && !entityMenuIdClassVerdict[1]) {
                entityId1 = '#' + entityMenuIdClassVerdict[0] + '_Safe';
                entityId2 = '#' + entityMenuIdClassVerdict[0] + '_Unsafe';
                entityId3 = '#' + entityMenuIdClassVerdict[0] + '_Unknown';
                if (this.checked) {
                  $(entityId1).attr('checked', true).click().attr('checked', true);
                  $(entityId2).attr('checked', true).click().attr('checked', true);
                  $(entityId3).attr('checked', true).click().attr('checked', true);
                }
                else {
                  $(entityId1).attr('checked', false).click().attr('checked', false);
                  $(entityId2).attr('checked', false).click().attr('checked', false);
                  $(entityId3).attr('checked', false).click().attr('checked', false);
                }
              }
            });
          });
        </script>
        <script type='text/javascript'>
          $(document).ready(function() {
            $('#SCFromToTheSame').attr('checked', false).click().attr('checked', false);
          });
        </script>";

  // Also print plugin for conversion drivers show/hide.
  echo "<script type='text/javascript'>
          $(document).ready(function() {
            $('a.SCConversion').toggle(function() {
              var entityId = $(this).attr('id');
              var entityIdClassId = entityId.split('_');
              $('#SCConversionDrivers_' + entityIdClassId[1]).show();
              return false;
            } , function() {
              var entityId = $(this).attr('id');
              var entityIdClassId = entityId.split('_');
              $('#SCConversionDrivers_' + entityIdClassId[1]).hide();
              return false;
            });
          });
        </script>";

  // Print plugin for show/hide all conversion drivers.
  echo "<script type='text/javascript'>
          $(document).ready(function() {
            $('#SCConversionDriversShow').click(function() {
              $('.SCConversionDrivers').show();
              return false;
            });
          });
        </script>
        <script type='text/javascript'>
          $(document).ready(function() {
            $('#SCConversionDriversHide').click(function() {
              $('.SCConversionDrivers').hide();
              return false;
            });
          });
        </script>";

  $deleted = 'Deleted';
  // This array contains mapping between verdict 'from database' and verdict to
  // be shown on the page.
  $verdicts = $verdictsRef = array(
    'safe' => 'Safe',
    'unsafe' => 'Unsafe',
    'unknown' => 'Unknown',
    '__DELETED' => $deleted);

  echo "<div id='SCActionMenu' style='display:none' >";

  foreach ($verdicts as $verdict) {
    echo "<table>
            <tr>
              <td rowspan=2><input type='checkbox' checked class='SCFromToShowHide' id='SCFromTo_$verdict'></td>
              <td><input type='checkbox' checked class='SCFromToShowHide' id='SCFrom_$verdict'>From '$verdict'</td>
            </tr>
            <tr>
              <td><input type='checkbox' checked class='SCFromToShowHide' id='SCTo_$verdict'>To '$verdict'</td>
            </tr>
         </table>";
  }

  echo "<br>";

  echo "<table>
          <tr>
            <td rowspan=3><input type='checkbox' checked class='SCFromToShowHide' id='SCFromToTheSame'></td>";
  foreach ($verdicts as $verdict) {
    // It's taken into account that 'deleted' verdict is placed at the end of array.
    if ($verdict == $deleted) {
      break;
    }

    echo "  <td><input type='checkbox' checked class='SCFromToShowHide' id='SCFromToTheSame_$verdict'>From '$verdict' to '$verdict'</td>
          </tr>
          <tr>";
  }
  echo "</tr></table>";

  echo "<div><a href='#' id='SCConversionDriversShow'>Show all conversion drivers</a></div>";
  echo "<div><a href='#' id='SCConversionDriversHide'>Hide all conversion drivers</a></div>";

  echo "</div>";

  echo "<br>";

  $stats = $results['Comparison stats']['Row info'];
  $changes = $results['Comparison stats']['All changes'];

  $statKeys = array_keys($stats[0]['Stats key']);

  echo "<table border=1>
          <tr align='center' bgcolor='yellow'>";
  echo "    <td nowrap>#</td>";
  foreach ($statKeys as $statKey) {
    echo "    <td nowrap rowspan>$statKey</td>";
  }

  echo "    <td nowrap>Total changes</td>";

  foreach ($verdictsRef as $verdictRefRaw => $verdictRef) {
    foreach ($verdicts as $verdictRaw => $verdict) {
      if ($verdictRef == $deleted and $verdict == $deleted) {
        continue;
      }

      // Print just conversions that take place.
      if (array_key_exists($verdictRefRaw, $changes) and array_key_exists($verdictRaw, $changes[$verdictRefRaw])) {
        echo "    <td nowrap class='SCFrom_$verdictRef SCTo_$verdict'>$verdictRef -> $verdict</td>";
      }
    }
  }

  echo "  </tr>";

  // Iterate over all results.
  $i = 1;
  $conversionId = 1;
  foreach ($stats as $result) {
    echo "  <tr align='center'>";
    echo "    <td>$i</td>";
    $i++;
    $statKeysValues = array();
    foreach ($statKeys as $statKey) {
      echo "    <td>";

      if (array_key_exists($statKey, $result['Stats key'])) {
        $value = $result['Stats key'][$statKey];
        echo $value;
        if (is_null($value)) {
          $value = '__NULL';
        }
        else if ($value == '') {
          $value = '__EMPTY';
        }

        $statKeysValues[$statKey] = $value;
      }
      else {
        echo '-';
      }

      echo "</td>";
    }
    $statKeysMatchedValues = array();
    foreach ($statKeys as $statKey) {
      if (array_key_exists($statKey, $result['Stats key matched'])) {
        $value = $result['Stats key matched'][$statKey];
        if (is_null($value)) {
          $value = '__NULL';
        }
        else if ($value == '') {
          $value = '__EMPTY';
        }

        $statKeysMatchedValues[$statKey] = $value;
      }
    }

    echo "    <td><a href='#' class='SCConversion' id='SCConversion_$conversionId'>" . $result['Total changes'] . "</a>";
    echo "<div style='display:none'  id='SCConversionDrivers_$conversionId' class='SCConversionDrivers'>";
    $conversionId++;

    foreach ($verdictsRef as $verdictRefRaw => $verdictRef) {
      foreach ($verdicts as $verdictRaw => $verdict) {
        if ($verdictRef == $deleted and $verdict == $deleted or $verdictRef == $verdict) {
          continue;
        }

        if (array_key_exists($verdictRefRaw, $changes) and array_key_exists($verdictRaw, $changes[$verdictRefRaw])) {
          echo "<div>From '$verdictRef' to '$verdict' (";
          $isChangesNumbPrinted = false;
          if (array_key_exists($verdictRefRaw, $result['Verdict changes'])) {
            if (array_key_exists($verdictRaw, $result['Verdict changes'][$verdictRefRaw])) {
              echo $result['Verdict changes'][$verdictRefRaw][$verdictRaw]['numb'];
              $isChangesNumbPrinted = true;
            }
          }
          if (!$isChangesNumbPrinted) {
            echo '0';
          }
          echo " rows)</div>";

          $isConversionPrinted = false;
          if (array_key_exists($verdictRefRaw, $result['Verdict changes'])) {
            if (array_key_exists($verdictRaw, $result['Verdict changes'][$verdictRefRaw])) {
              $drivers = $result['Verdict changes'][$verdictRefRaw][$verdictRaw]['drivers'];

              $driversStatKeys = array_keys($drivers[0]['driver']);
              $driversMatchedStatKeys = array_keys($drivers[0]['matched driver']);

              echo "<table border=1>
                      <tr align='center' bgcolor='yellow'>";
              echo "    <td nowrap>#</td>";
              foreach ($driversMatchedStatKeys as $driversMatchedStatKey) {
                if (!($driversMatchedStatKey == 'Stats key matched')) {
                  echo "  <td nowrap>$driversMatchedStatKey</td>";
                }
              }
              echo "<td rowspan='" . (1 + count($drivers)) . "'> -> </td>";
              foreach ($driversStatKeys as $driversStatKey) {
                echo "  <td nowrap>$driversStatKey</td>";
              }
              echo "  </tr>";

              // Iterate over all drivers.
              $j = 1;
              foreach ($drivers as $driver) {
                echo "<tr>";
                echo "  <td>$j</td>";
                $j++;
                foreach ($driversMatchedStatKeys as $driversMatchedStatKey) {
                  if ($driversMatchedStatKey != 'Stats key matched') {
                    echo "  <td nowrap>" . $driver['matched driver'][$driversMatchedStatKey] . "</td>";
                  }
                }
                foreach ($driversStatKeys as $driversStatKey) {
                  echo "  <td nowrap>" . $driver['driver'][$driversStatKey] . "</td>";
                }
                echo "</tr>";
              }

              echo "</table>";
              $isConversionPrinted = true;
            }
          }

          if (!$isConversionPrinted) {
            echo '-';
          }
        }
      }
    }
    echo "</div></td>";

    foreach ($verdictsRef as $verdictRefRaw => $verdictRef) {
      foreach ($verdicts as $verdictRaw => $verdict) {
        if ($verdictRef == $deleted and $verdict == $deleted) {
          continue;
        }

        if (array_key_exists($verdictRefRaw, $changes) and array_key_exists($verdictRaw, $changes[$verdictRefRaw])) {
          echo "<td class='SCFrom_$verdictRef SCTo_$verdict'>";

          $isConversionPrinted = false;
          if (array_key_exists($verdictRefRaw, $result['Verdict changes'])) {
            if (array_key_exists($verdictRaw, $result['Verdict changes'][$verdictRefRaw])) {
              echo "<a href='#' class='SCConversion' id='SCConversion_$conversionId'>" . $result['Verdict changes'][$verdictRefRaw][$verdictRaw]['numb'] . "</a>";
              $drivers = $result['Verdict changes'][$verdictRefRaw][$verdictRaw]['drivers'];

              $driversStatKeys = array_keys($drivers[0]['driver']);
              $driversMatchedStatKeys = array_keys($drivers[0]['matched driver']);

              echo "<table border=1 style='display:none' id='SCConversionDrivers_$conversionId' class='SCConversionDrivers'>
                      <tr align='center' bgcolor='yellow'>";
              echo "    <td nowrap>#</td>";
              foreach ($driversMatchedStatKeys as $driversMatchedStatKey) {
                if (!($driversMatchedStatKey == 'Stats key matched')) {
                  echo "  <td nowrap>$driversMatchedStatKey</td>";
                }
              }
              if (count($driversMatchedStatKeys)) {
                echo " <td nowrap>Details</td>";
              }
              echo "<td rowspan='" . (1 + count($drivers)) . "'> -> </td>";
              foreach ($driversStatKeys as $driversStatKey) {
                echo "  <td nowrap>$driversStatKey</td>";
              }
              if (count($driversStatKeys)) {
                echo " <td nowrap>Details</td>";
              }
              echo "  </tr>";

              // Iterate over all drivers.
              $j = 1;
              foreach ($drivers as $driver) {
                $statKeysDriverValues = array();
                $statKeysDriverMatchedValues = array();
                echo "<tr>";
                echo "  <td>$j</td>";
                $j++;

                foreach ($driversMatchedStatKeys as $driversMatchedStatKey) {
                  $value = $driver['matched driver'][$driversMatchedStatKey];

                  // For conversions to deleted state matched driver carries
                  // information on statistics key values.
                  if ($driversMatchedStatKey == 'Stats key matched') {
                    $statKeysMatchedValues = array();
                    foreach ($statKeys as $statKey) {
                      if (array_key_exists($statKey, $value)) {
                        $valueAux = $value[$statKey];
                        if (is_null($valueAux)) {
                          $valueAux = '__NULL';
                        }
                        else if ($valueAux == '') {
                          $valueAux = '__EMPTY';
                        }

                        $statKeysMatchedValues[$statKey] = $valueAux;
                      }
                    }
                  }
                  else {
                    echo "  <td nowrap>$value</td>";
                    $statKeysDriverMatchedValues[$driversMatchedStatKey] = $value;
                  }
                }
                if (count($driversMatchedStatKeys)) {
                  echo "    <td>";
                  echo "<a href='"
                    . $this->url(
                      array_merge(
                        $globals,
                        array(
                          'controller' => 'stats',
                          'action'     => 'index',
                          'page' => "Launches"),
                        $statKeysMatchedValues,
                        $statKeysDriverMatchedValues),
                      'default',
                      true)
                    . "'>...</a>";
                  echo "</td>";
                }
                foreach ($driversStatKeys as $driversStatKey) {
                  $value = $driver['driver'][$driversStatKey];
                  echo "  <td nowrap>$value</td>";
                  $statKeysDriverValues[$driversStatKey] = $value;
                }
                if (count($driversStatKeys)) {
                  echo "    <td>";
                  echo "<a href='"
                    . $this->url(
                      array_merge(
                        $globals,
                        array(
                          'controller' => 'stats',
                          'action'     => 'index',
                          'page' => "Launches"),
                        $statKeysValues,
                        $statKeysDriverValues),
                      'default',
                      true)
                    . "'>...</a>";
                  echo "</td>";
                }
                echo "</tr>";
              }

              echo "</table>";
              $isConversionPrinted = true;
              $conversionId++;
            }
          }

          if (!$isConversionPrinted) {
            echo '-';
          }

          echo "</td>";
        }
      }
    }
  }

  echo "</table>";
}

printInfo($results);

?>
