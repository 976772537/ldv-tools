<?php
/*
 * Copyright (C) 2010-2012
 * Institute for System Programming, Russian Academy of Sciences (ISPRAS).
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

include 'general.php';

// Get all infomation to be displayed.
$results = $this->entries;

// Get the view name.
$page = $results['Page'];
$globals = $results['Globals'];

$resultsNumb = count($results['Comparison stats']['Row info']);
echo "<div id='SSStatsTableTitle'>Comparison statistics for the page '$page' (" . $resultsNumb . " rows)</div>";

// Print general comparison statistics table if so.
if ($resultsNumb) {
  echo "<div class='SSNote'>Note that the first part of the verdict conversions corresponds to the referenced task verdict.</div>";

  // Print show/hide plugin for action menu itself. By default it's hidden.'
  echo "<script type='text/javascript'>
          $(document).ready(function() {
            $('#SCActionMenuShowHideLink').toggle(function() {
              $('#SCActionMenu').show();
              return false;
            } , function() {
              $('#SCActionMenu').hide();
              return false;
            });
          });
        </script>";

  echo "<div id='SCActionMenuShowHide'><a href='#' id='SCActionMenuShowHideLink'>Action menu</a></div>";

  // Print show/hide plugin for different kinds and types of conversions.
  echo "<script type='text/javascript'>
          $(document).ready(function() {
            $('.SCFromToShowHide').click(function() {
              var entityMenuId = $(this).attr('id');
              var entityMenuIdClassVerdict = entityMenuId.split('_');

              if (entityMenuIdClassVerdict[0] == 'SCFrom' || entityMenuIdClassVerdict[0] == 'SCTo') {
                entityClass = '.' + entityMenuIdClassVerdict[0] + '_' + entityMenuIdClassVerdict[1];
                if (this.checked) {
                  $(entityClass).show();
                }
                else {
                  $(entityClass).hide();
                }
              }
              else if (entityMenuIdClassVerdict[0] == 'SCFromToTheSame' && entityMenuIdClassVerdict[1]) {
                entityClass1 = '.SCFrom_' + entityMenuIdClassVerdict[1];
                entityClass2 = '.SCTo_' + entityMenuIdClassVerdict[1];
                if (this.checked) {
                  $(entityClass1 + entityClass2).show();
                }
                else {
                  $(entityClass1 + entityClass2).hide();
                }
              }
            });
          });
        </script>
        <script type='text/javascript'>
          $(document).ready(function() {
            $('.SCFromToShowHide').click(function() {
              var entityMenuId = $(this).attr('id');
              var entityMenuIdClassVerdict = entityMenuId.split('_');

              if (entityMenuIdClassVerdict[0] == 'SCFromTo') {
                entityId1 = '#SCFrom_' + entityMenuIdClassVerdict[1];
                entityId2 = '#SCTo_' + entityMenuIdClassVerdict[1];
                if (this.checked) {
                  $(entityId1).attr('checked', true).click().attr('checked', true);
                  $(entityId2).attr('checked', true).click().attr('checked', true);
                }
                else {
                  $(entityId1).attr('checked', false).click().attr('checked', false);
                  $(entityId2).attr('checked', false).click().attr('checked', false);
                }
              }
              else if (entityMenuIdClassVerdict[0] == 'SCFromToTheSame' && !entityMenuIdClassVerdict[1]) {
                entityId1 = '#' + entityMenuIdClassVerdict[0] + '_Safe';
                entityId2 = '#' + entityMenuIdClassVerdict[0] + '_Unsafe';
                entityId3 = '#' + entityMenuIdClassVerdict[0] + '_Unknown';
                if (this.checked) {
                  $(entityId1).attr('checked', true).click().attr('checked', true);
                  $(entityId2).attr('checked', true).click().attr('checked', true);
                  $(entityId3).attr('checked', true).click().attr('checked', true);
                }
                else {
                  $(entityId1).attr('checked', false).click().attr('checked', false);
                  $(entityId2).attr('checked', false).click().attr('checked', false);
                  $(entityId3).attr('checked', false).click().attr('checked', false);
                }
              }
            });
          });
        </script>
        <script type='text/javascript'>
          $(document).ready(function() {
            $('#SCFromToTheSame').attr('checked', false).click().attr('checked', false);
          });
        </script>";

  // Also print plugin for conversion drivers show/hide.
  echo "<script type='text/javascript'>
          $(document).ready(function() {
            $('a.SCConversion').toggle(function() {
              var entityId = $(this).attr('id');
              var entityIdClassId = entityId.split('_');
              $('#SCConversionDrivers_' + entityIdClassId[1]).show();
              return false;
            } , function() {
              var entityId = $(this).attr('id');
              var entityIdClassId = entityId.split('_');
              $('#SCConversionDrivers_' + entityIdClassId[1]).hide();
              return false;
            });
          });
        </script>";

  // Print plugin for show/hide all conversion drivers.
  echo "<script type='text/javascript'>
          $(document).ready(function() {
            $('#SCConversionDriversShow').click(function() {
              $('.SCConversionDrivers').show();
              return false;
            });
          });
        </script>
        <script type='text/javascript'>
          $(document).ready(function() {
            $('#SCConversionDriversHide').click(function() {
              $('.SCConversionDrivers').hide();
              return false;
            });
          });
        </script>";

  // Print row color alternation plugin.
  echo "<script type='text/javascript'>
          $(document).ready(function() {
            $('.SSStatsComparisonTableRow:even').addClass('SSStatsTableColorAlternationFirstLight');
            $('.SSStatsComparisonTableRow:odd').addClass('SSStatsTableColorAlternationFirstDark');
            $('.SSStatsComparisonSubTableRow:even').addClass('SSStatsTableColorAlternationSecondLight');
            $('.SSStatsComparisonSubTableRow:odd').addClass('SSStatsTableColorAlternationSecondDark');
          });
        </script>";

  // Print row chooser plugin.
  echo "<script type='text/javascript'>
          $(document).ready(function() {
            $('.SSStatsComparisonTableRow').mouseover(function() {
              $(this).addClass('SSStatsComparisonTableColorOver');
            })
            $('.SSStatsComparisonTableRow').mouseout(function() {
              $('.SSStatsComparisonTableColorOver').removeClass('SSStatsComparisonTableColorOver');
            });

            $('.SSStatsComparisonSubTableRow').mouseover(function() {
              $(this).addClass('SSStatsComparisonSubTableColorOver');
            })
            $('.SSStatsComparisonSubTableRow').mouseout(function() {
              $('.SSStatsComparisonSubTableColorOver').not('.SSStatsComparisonSubTableColorOverFreeze').removeClass('SSStatsComparisonSubTableColorOver');
            });
            $('.SSStatsComparisonSubTableRow').click(function() {
              if ($(this).hasClass('SSStatsComparisonSubTableColorOverFreeze'))
                $('.SSStatsComparisonSubTableColorOver').removeClass('SSStatsComparisonSubTableColorOverFreeze').removeClass('SSStatsComparisonSubTableColorOver');
              else
                $('.SSStatsComparisonSubTableColorOver').addClass('SSStatsComparisonSubTableColorOverFreeze');
            });
          });
        </script>";

  $deleted = 'Deleted';
  // This array contains mapping between verdict 'from database' and verdict to
  // be shown on the page.
  $verdicts = $verdictsRef = array(
    'safe' => 'Safe',
    'unsafe' => 'Unsafe',
    'unknown' => 'Unknown',
    '__DELETED' => $deleted);

  echo "<div id='SCActionMenu' style='display:none' >";

  foreach ($verdicts as $verdict) {
    echo "<table>
            <tr>
              <td rowspan=2><input type='checkbox' checked class='SCFromToShowHide' id='SCFromTo_$verdict'></td>
              <td><input type='checkbox' checked class='SCFromToShowHide' id='SCFrom_$verdict'>From '$verdict'</td>
            </tr>
            <tr>
              <td><input type='checkbox' checked class='SCFromToShowHide' id='SCTo_$verdict'>To '$verdict'</td>
            </tr>
         </table>";
  }

  echo "<table>
          <tr>
            <td rowspan=3><input type='checkbox' checked class='SCFromToShowHide' id='SCFromToTheSame'></td>";
  foreach ($verdicts as $verdict) {
    // It's taken into account that 'deleted' verdict is placed at the end of array.
    if ($verdict == $deleted) {
      break;
    }

    echo "  <td><input type='checkbox' checked class='SCFromToShowHide' id='SCFromToTheSame_$verdict'>From '$verdict' to '$verdict'</td>
          </tr>
          <tr>";
  }
  echo "</tr></table>";

  echo "<div><a href='#' id='SCConversionDriversShow'>Show all conversion drivers</a></div>";
  echo "<div><a href='#' id='SCConversionDriversHide'>Hide all conversion drivers</a></div>";

  echo "</div>";

  $stats = $results['Comparison stats']['Row info'];
  $changes = $results['Comparison stats']['All changes'];

  $statKeys = array_keys($stats[0]['Stats key']);

  echo "<table id='SCStatsComparisonTable' border='1'>
          <tr id='SCStatsComparisonTableHeaderFirstRow'>";
  echo "    <td id='SCStatsComparisonTableHeaderRowCounter'>#</td>";
  foreach ($statKeys as $statKey) {
    echo "    <td class='SCStatsComparisonTableHeaderStatKeys'>$statKey</td>";
  }

  echo "    <td class='SCStatsComparisonTableHeaderTotalChanges'>Total changes</td>";

  foreach ($verdictsRef as $verdictRefRaw => $verdictRef) {
    foreach ($verdicts as $verdictRaw => $verdict) {
      if ($verdictRef == $deleted and $verdict == $deleted) {
        continue;
      }

      // Print just conversions that take place.
      if (array_key_exists($verdictRefRaw, $changes) and array_key_exists($verdictRaw, $changes[$verdictRefRaw])) {
        echo "    <td class='SCStatsComparisonTableHeaderConversions SCFrom_$verdictRef SCTo_$verdict'>$verdictRef &rarr; $verdict</td>";
      }
    }
  }

  echo "  </tr>";

  // Iterate over all results.
  $i = 1;
  $conversionId = 1;
  foreach ($stats as $result) {
    echo "  <tr class='SSStatsComparisonTableRow' align='center'>";
    echo "    <td>$i</td>";
    $i++;
    $statKeysValues = array();
    foreach ($statKeys as $statKey) {
      echo "    <td class='SCStatsComparisonTableStatKeys'>";

      if (array_key_exists($statKey, $result['Stats key'])) {
        $value = $result['Stats key'][$statKey];

        // Print conversion for the kernel if so.
        if ($statKey == 'Environment version'
          && array_key_exists($statKey, $result['Stats key matched'])
          && $result['Stats key matched'][$statKey] != $value)
          echo $result['Stats key matched'][$statKey] . " &rarr; ";

        echo $value;
        if (is_null($value)) {
          $value = '__NULL';
        }
        else if ($value == '') {
          $value = '__EMPTY';
        }

        $statKeysValues[$statKey] = $value;
      }
      else {
        echo '-';
      }

      echo "</td>";
    }
    $statKeysMatchedValues = array();
    foreach ($statKeys as $statKey) {
      if (array_key_exists($statKey, $result['Stats key matched'])) {
        $value = $result['Stats key matched'][$statKey];
        if (is_null($value)) {
          $value = '__NULL';
        }
        else if ($value == '') {
          $value = '__EMPTY';
        }

        $statKeysMatchedValues[$statKey] = $value;
      }
    }

    echo "    <td class='SSVerticalAlignTop SSAlignRight'><a href='#' class='SCConversion' id='SCConversion_$conversionId'>" . $result['Total changes'] . "</a>";
    echo "<div style='display:none' id='SCConversionDrivers_$conversionId' class='SCConversionDrivers'>";
    $conversionId++;

    foreach ($verdictsRef as $verdictRefRaw => $verdictRef) {
      foreach ($verdicts as $verdictRaw => $verdict) {
        if ($verdictRef == $deleted and $verdict == $deleted or $verdictRef == $verdict) {
          continue;
        }

        if (array_key_exists($verdictRefRaw, $changes) and array_key_exists($verdictRaw, $changes[$verdictRefRaw])) {
          echo "<div class='SCStatsComparisonSubTableTotalHeader'>From '$verdictRef' to '$verdict' (";
          $isChangesNumbPrinted = false;
          if (array_key_exists($verdictRefRaw, $result['Verdict changes'])) {
            if (array_key_exists($verdictRaw, $result['Verdict changes'][$verdictRefRaw])) {
              echo $result['Verdict changes'][$verdictRefRaw][$verdictRaw]['numb'];
              $isChangesNumbPrinted = true;
            }
          }
          if (!$isChangesNumbPrinted) {
            echo '0';
          }
          echo " rows)</div>";

          $isConversionPrinted = false;
          if (array_key_exists($verdictRefRaw, $result['Verdict changes'])) {
            if (array_key_exists($verdictRaw, $result['Verdict changes'][$verdictRefRaw])) {
              $drivers = $result['Verdict changes'][$verdictRefRaw][$verdictRaw]['drivers'];

              $driversStatKeys = array();
              // Actually there may be not driver at all (it is "deleted").
              if (array_key_exists('Stats key', $drivers[0]['driver']))
              {
                $driversStatKeys = array_keys($drivers[0]['driver']['Stats key']);
              }
              $driversMatchedStatKeys = array();
              // Actually there may be not matched driver at all (it is "deleted").
              if (array_key_exists('Stats key', $drivers[0]['matched driver']))
              {
                $driversMatchedStatKeys = array_keys($drivers[0]['matched driver']['Stats key']);
              }

              echo "<table class='SCStatsComparisonSubTableTotal' border='1'>
                      <tr class='SCStatsComparisonSubTableHeaderTotalFirstRow'>";
              echo "    <td class='SCStatsComparisonSubTableHeaderTotalRowCounter'>#</td>";
              foreach ($driversMatchedStatKeys as $driversMatchedStatKey) {
                if (!($driversMatchedStatKey == 'Stats key matched')) {
                  echo "  <td class='SCStatsComparisonSubTableHeaderTotalStatKeys'>$driversMatchedStatKey</td>";
                }
              }
              echo "<td class='SCStatsComparisonSubTableHeaderTotalArrow' rowspan='" . (1 + count($drivers)) . "'> &rarr; </td>";
              foreach ($driversStatKeys as $driversStatKey) {
                echo "  <td class='SCStatsComparisonSubTableHeaderTotalStatKeys'>$driversStatKey</td>";
              }
              echo "  </tr>";

              // Iterate over all drivers.
              $j = 1;
              foreach ($drivers as $driver) {
                echo "<tr class='SSStatsComparisonSubTableRow' align='center'>";
                echo "  <td>$j</td>";
                $j++;
                foreach ($driversMatchedStatKeys as $driversMatchedStatKey) {
                  if ($driversMatchedStatKey != 'Stats key matched') {
                    echo "  <td class='SCStatsComparisonSubTableTotalStatKeys'>" . $driver['matched driver']['Stats key'][$driversMatchedStatKey] . "</td>";
                  }
                }
                foreach ($driversStatKeys as $driversStatKey) {
                  echo "  <td class='SCStatsComparisonSubTableTotalStatKeys'>" . $driver['driver']['Stats key'][$driversStatKey] . "</td>";
                }
                echo "</tr>";
              }

              echo "</table>";
              $isConversionPrinted = true;
            }
          }

          if (!$isConversionPrinted) {
            echo '-';
          }
        }
      }
    }
    echo "</div></td>";

    foreach ($verdictsRef as $verdictRefRaw => $verdictRef) {
      foreach ($verdicts as $verdictRaw => $verdict) {
        if ($verdictRef == $deleted and $verdict == $deleted) {
          continue;
        }

        if (array_key_exists($verdictRefRaw, $changes) and array_key_exists($verdictRaw, $changes[$verdictRefRaw])) {
          echo "<td class='SSVerticalAlignTop SSAlignRight SCFrom_$verdictRef SCTo_$verdict'>";

          $isConversionPrinted = false;
          if (array_key_exists($verdictRefRaw, $result['Verdict changes'])) {
            if (array_key_exists($verdictRaw, $result['Verdict changes'][$verdictRefRaw])) {
              echo "<a href='#' class='SCConversion' id='SCConversion_$conversionId'>" . $result['Verdict changes'][$verdictRefRaw][$verdictRaw]['numb'] . "</a>";
              $drivers = $result['Verdict changes'][$verdictRefRaw][$verdictRaw]['drivers'];

              // Actually there may be not driver at all (it is "deleted").
              if (array_key_exists('Stats key', $drivers[0]['driver']))
              {
                $driversStatKeys = array_keys($drivers[0]['driver']['Stats key']);
                $driversAuxInfoKeys = array_keys($drivers[0]['driver']['Aux info']);
              }
              // Actually there may be not matched driver at all (it is "deleted").
              if (array_key_exists('Stats key', $drivers[0]['matched driver']))
              {
                $driversMatchedStatKeys = array_keys($drivers[0]['matched driver']['Stats key']);
                $driversMatchedAuxInfoKeys = array_keys($drivers[0]['matched driver']['Aux info']);
              }

              echo "<table border=1 style='display:none' id='SCConversionDrivers_$conversionId' class='SCStatsComparisonSubTable SCConversionDrivers'>
                      <tr class='SCStatsComparisonSubTableHeaderFirstRow'>";
              echo "    <td class='SCStatsComparisonSubTableHeaderRowCounter'>#</td>";
              if ($driversMatchedStatKeys)
              {
                foreach ($driversMatchedStatKeys as $driversMatchedStatKey) {
                  if (!($driversMatchedStatKey == 'Stats key matched')) {
                    echo "  <td class='SCStatsComparisonSubTableHeaderStatKeys'>$driversMatchedStatKey</td>";
                  }
                }
                foreach ($driversMatchedAuxInfoKeys as $driversMatchedAuxInfoKey) {
                  if ($verdictRefRaw == 'unsafe' && $driversMatchedAuxInfoKey == 'Error trace')
                    echo "  <td class='SCStatsComparisonSubTableHeaderDetails'>$driversMatchedAuxInfoKey</td>";
                }
                if (count($driversMatchedStatKeys)) {
                  echo " <td class='SCStatsComparisonSubTableHeaderDetails'>Details</td>";
                }
              }
              echo "<td class='SCStatsComparisonSubTableHeaderArrow' rowspan='" . (1 + count($drivers)) . "'> &rarr; </td>";
              if ($driversStatKeys)
              {
                foreach ($driversStatKeys as $driversStatKey) {
                  echo "  <td class='SCStatsComparisonSubTableHeaderStatKeys'>$driversStatKey</td>";
                }
                foreach ($driversAuxInfoKeys as $driversAuxInfoKey) {
                  if ($verdictRaw == 'unsafe' && $driversAuxInfoKey == 'Error trace')
                    echo "  <td class='SCStatsComparisonSubTableHeaderDetails'>$driversAuxInfoKey</td>";
                }
                if (count($driversStatKeys)) {
                  echo "  <td class='SCStatsComparisonSubTableHeaderDetails'>Details</td>";
                }
              }
              echo "  </tr>";

              // Iterate over all drivers.
              $j = 1;
              foreach ($drivers as $driver) {
                $statKeysDriverValues = array();
                $statKeysDriverMatchedValues = array();
                echo "<tr class='SSStatsComparisonSubTableRow' align='center'>";
                echo "  <td>$j</td>";
                $j++;

                if ($driversMatchedStatKeys)
                {
                  foreach ($driversMatchedStatKeys as $driversMatchedStatKey) {
                    $value = $driver['matched driver']['Stats key'][$driversMatchedStatKey];

                    // For conversions to deleted state matched driver carries
                    // information on statistics key values.
                    if ($driversMatchedStatKey == 'Stats key matched') {
                      $statKeysMatchedValues = array();
                      foreach ($statKeys as $statKey) {
                        if (array_key_exists($statKey, $value)) {
                          $valueAux = $value[$statKey];
                          if (is_null($valueAux)) {
                            $valueAux = '__NULL';
                          }
                          else if ($valueAux == '') {
                            $valueAux = '__EMPTY';
                          }

                          $statKeysMatchedValues[$statKey] = $valueAux;
                        }
                      }
                    }
                    else {
                      echo "<td class='SCStatsComparisonSubTableStatKeys'>$value</td>";
                      $statKeysDriverMatchedValues[$driversMatchedStatKey] = $value;
                    }
                  }
                  foreach ($driversMatchedAuxInfoKeys as $driversMatchedAuxInfoKey) {
                    if ($verdictRefRaw == 'unsafe' && $driversMatchedAuxInfoKey == 'Error trace') {
                      echo "<td class='SCStatsComparisonSubTableDetails'>";
                      echo "<a href='"
                        . $this->url(
                          array_merge(
                            $globals,
                            array(
                              'controller' => 'stats',
                              'action'     => 'errortrace',
                              'page' => $driversMatchedAuxInfoKey,
                              'value' => $drivers[0]['matched driver']['Aux info'][$driversMatchedAuxInfoKey]),
                            $statKeysMatchedValues,
                            $statKeysDriverMatchedValues),
                          'default',
                          true)
                        . "'>...</a>";
                      echo "</td>";
                    }
                  }
                  if (count($driversMatchedStatKeys)) {
                    echo "<td class='SCStatsComparisonSubTableDetails'>";
                    echo "<a href='"
                      . $this->url(
                        array_merge(
                          $globals,
                          array(
                            'controller' => 'stats',
                            'action'     => 'index',
                            'page' => "Launches"),
                          $statKeysMatchedValues,
                          $statKeysDriverMatchedValues),
                        'default',
                        true)
                      . "'>...</a>";
                    echo "</td>";
                  }
                }
                if ($driversStatKeys)
                {
                  foreach ($driversStatKeys as $driversStatKey) {
                    $value = $driver['driver']['Stats key'][$driversStatKey];
                    echo "<td class='SCStatsComparisonSubTableStatKeys'>$value</td>";
                    $statKeysDriverValues[$driversStatKey] = $value;
                  }
                  foreach ($driversAuxInfoKeys as $driversAuxInfoKey) {
                    if ($verdictRaw == 'unsafe' && $driversAuxInfoKey == 'Error trace') {
                      echo "<td class='SCStatsComparisonSubTableDetails'>";
                      echo "<a href='"
                        . $this->url(
                          array_merge(
                            $globals,
                            array(
                              'controller' => 'stats',
                              'action'     => 'errortrace',
                              'page' => $driversAuxInfoKey,
                              'value' => $drivers[0]['driver']['Aux info'][$driversAuxInfoKey]),
                            $statKeysValues,
                            $statKeysDriverValues),
                          'default',
                          true)
                        . "'>...</a>";
                      echo "</td>";
                    }
                  }
                  if (count($driversStatKeys)) {
                    echo "<td class='SCStatsComparisonSubTableDetails'>";
                    echo "<a href='"
                      . $this->url(
                        array_merge(
                          $globals,
                          array(
                            'controller' => 'stats',
                            'action'     => 'index',
                            'page' => "Launches"),
                          $statKeysValues,
                          $statKeysDriverValues),
                        'default',
                        true)
                      . "'>...</a>";
                    echo "</td>";
                  }
                }
                echo "</tr>";
              }

              echo "</table>";
              $isConversionPrinted = true;
              $conversionId++;
            }
          }

          if (!$isConversionPrinted) {
            echo '-';
          }

          echo "</td>";
        }
      }
    }
  }

  echo "</table>";
}

printInfo($results);

?>
