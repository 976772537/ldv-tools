	Linux Driver Verification (LDV)

	HowTo for Developers of static Verifiers


One of the aims of the LDV program is helping developers of Static Analysis
tools ("verifiers") to create better tools.  Driver sources aren't hard to
verify, and their varying size fits well the purpose of scalability testing.
This file lists the options the developers of analysis tools have, and provides
help for those who might want to use CPAchecker with our tools.

Modular architecture of LDV tools makes it possible to replace one static code
checker with another, as long as the tool can solve reachability problem for C
language.  We call such tools "Reachability C Verifiers" (or, RCVs).
Unfortunately, due to low demand on such functionality, the interface is not
well-developed, and is prohibitively hard to develop for the people not involved
in the project.

However, we integrated support of BLAST and CPAchecker as verifiers into our
tools.


HOW TO USE CPACHECKER
=====================

To use CPAchecker as RCV, you should first install your tools as usual, with a
few optional actions to perform.  Refer to INSTALL file, but you may skip those
prerequisites which refer to "BLAST" verifier shipped by default.  If you skip
them, you must use "no_blast=y" option when installing the toolset.

Install the following components: install-visualization, install-testing.

You most likely would want to run all drivers in a kernel, or run the "General"
regression test set (this test set contains "interesting" drivers of various
sizes).  The only difference with default workflow (about which you can read in
README and TUTORIAL) is that you should set some additional environment
variables before you run the tools.  Here's the list of them:

RCV_VERIFIER=cpachecker
	Use CPAchecker as RCV.  If you don't specify it, the tools will default
	to using BLAST.

CPACHECKER=/path/to/cpa.sh
	Specify location of CPAchecker cpa.sh script.  By default, it runs
	"cpa.sh" found in PATH environment variable.

CPACHECKER_CONFIG=config.cfg
	If yon don't want to use the default config (which is found in
	dscv/rcv/cpachecker.config/cpa.cfg.pattern), you may specify your own
	through this variable.  Note that some options will be automatically
	changed in it.

CPACHECKER_OPTIONS=
	Additional options for CPAchecker.  You should not set "-config" option
	here.

LDV_DEBUG=20
	To see the exact command lines, with which CPAchecker is invoked, you might
	want to increase the verbosity level.  Level of 20 is enough; you may
	increase it up to 100.

It could be a good idea to add these options to a file and just use "source"
shell command to apply them to the current environment.

