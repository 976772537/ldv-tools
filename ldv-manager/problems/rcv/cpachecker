#!/usr/bin/perl
# Problem finder for CPAchecker tool

$\ = "\n";
$, = "\n";
while (<>){
	chomp;
	/unknown character literal in line (\d+): '\\v'/ and print "\\v";
	/Cannot access field ldv_(.*) in struct/ and print "Auto-generated ldv_ field";
	/Syntax error: \*\) 0 \)/ and print "Cast to local struct";
	/Syntax error: volatile \*\) 0 \)/ and print "Cast to local struct";
	/Syntax error: const \*\) 0 \)/ and print "Cast to local struct";
	/Syntax error: (\w+) = \( struct/ and print "Cast to local struct";
	/Syntax error: (\w+) = \( union/ and print "Cast to local struct";
	/Unsupported statement type CASTIfStatement at end of compound-statement/ and print "Unsupported CASTIfStatement";
	/Invalid C code because of undefined identifiers mentioned above\.\)/ and print "Undefined identifiers";
	/Accessing unknown field (.*) in struct/ and print "Unknown field";
	/Duplicate function (.*)\)/ and print "Duplicate function";
	/Missing \';\'/ and print "Missing semicolon";
	/Initializer of global variable has side effect/ and print "Init global";
	/Cannot access field (.*) in/ and print "Cannot access field";
	/Cannot access the field (.*) in/ and print "Cannot access field";
	/Shadowing types are currently not supported/ and print "Shadowing types";
	/Invalid type encountered/ and print "Invalid type";
	/Syntax error/ and print "Syntax_error";
	/Expression is not free of side-effects/ and print "Side";
	/Invalid configuration: Function ldv_main(.*) not found!/ and print "Main not found";
	/unknown initializer: CASTDesignatedInitializer/ and print "CASTDesignatedInitializer";
	/Unknown unary operator/ and print "Unary";
	/Duplicate label (.*) in function/ and print "Duplicate label";
	/File (.*) does not exist!/ and print "File not exists";
	/AbstractGNUSourceCodeParser.parseCompoundStatement/ and print "Compound statement";
	/CPAchecker.run, SEVERE/ and print "SEVERE";
	/java.lang.OutOfMemoryError: (.*)/ and print "Java OutOfmemory";
	/java.lang.AssertionError/ and print "Assertion";
	#/org.sosy_lab.cpachecker.util.predicates.CtoFormulaConverter.buildLvalueTerm/ and print "CtoFormulaConverter"; collision with Out of memory
	/java.lang.AssertionError: org.sosy_lab.cpachecker.cfa.ast.IASTBinaryExpression/ and print "IASTBinaryExpression";
	/org.sosy_lab.cpachecker.util.predicates.mathsat.MathsatInterpolatingProver.getInterpolant/ and print "MathsatInterpolatingProver";
	/No new predicates/ and print "NoNewPredicates";
	#org.sosy_lab.cpachecker.exceptions.RefinementFailedException[No new predicates]
	/cpa.sh: line (.*): (.*) Aborted/ and print "Aborted";

	/Syntax error(.*)__builtin_va_arg/ and print "__builtin_va_arg";
	/Unsupported C feature(.*)recursion/ and print "Recursion";
	/Exception(.*)CProblemType/ and print "CProblemType";
	/(.*)CFAReversePostorder"/ and print "Stack overflow";
	/(.*)C(.*)Type(.*).toASTString/ and print "Stack overflow";
	/Invalid.instance/ and print "Invalid instance";
	/Unrecognized C code/ and print "Unrecognized C code";
	/IllegalArgumentException: Can't add cast/ and print "Can't add cast";
	/IllegalArgumentException: Can't assign different types/ and print "Different types";
	
	/The walltime limit of (\d+)s has elapsed/ and print "Time exhausted";
	/Shutdown requested \(The CPU-time limit of (.*) has elapsed/ and print "CPU timelimit";

	# CPAchecker without CIL
	/Unrecognized C code \(Unhandled initializer\)/ and print "Unhandled initializer";
	/Name of global variable (.*) from line (.*) is reused as function declaration:/ and print "Global name as function";
	/is no CLeftHandside but should be\.:/ and print "No CLeftHandside";
	/Variable (.*) initialized for the second time/ and print "Init variable twice";
	/Variable (.*) already declared/ and print "Variable redeclaration";
	/unusual calculation BINARY_AND with (.*) pointer-operand/ and print "Unusual BINARY_AND";
	/IllegalArgumentException: Cannot change type of variable/ and print "Change type";
	/NullPointerException/ and print "NullPointerException";
	/IllegalArgumentException: Type (.*) has no default value/ and print "No default value";
	/IllegalArgumentException: Impossible structure assignment due to incompatible types/ and print "Incompatible types";
	/IllegalArgumentException/ and print "IllegalArgumentException";
	# CIL errors
	# subtypes of CIL_parse_error
	# Error: global static initializer
	# Error: There were errors during merging
	# subtypes of Parsing errors
	# Cannot compute sizeof: abstract type: (.*)
	# different number of fields in
	# The name (.*) is used for two distinct globals
}


