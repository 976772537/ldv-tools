#!/usr/bin/env ruby

require 'rubygems'
require 'nanite'
require 'optparse'
$:.unshift File.dirname(__FILE__)
require 'waiter.rb'
require 'options.rb'
require 'utils.rb'

opts_p = ClusterOptionsParser.new({})
opts_p.do_parse

# Initialize loggers
Logging.ldv_logging_init opts_p.options

EM.run do
  #Nanite.start_agent(opts_p.options)
	agent = Nanite::Agent.new( {:format => :json, :log_level=>'debug'}.merge opts_p.options)
	agent.run

	# Initialize logger for node as nanite
	# (start re-assigns this logger, so we should do it afterwards)
	Nanite::Log.init_with_logger Logging.logger['Nanite']

	node = agent.registry.actors['ldvnode']
	# Invoke reconfiguration at once, since there's no way to do it through constructor in Nanite
	node.reconfigure(opts_p.options)
end

