#!/bin/sh

#
#
# ldv-task driver workdir=workdir env:rule,rule env:rule,rule ...
#
#


LDV_HOME=`readlink -f \`dirname $0\`/../`;
LDV_DIR=$LDV_HOME/ldv;
LDV_KMANAGER=$LDV_DIR/ldv-kmanager;
LDV_CORE_DIR=$LDV_HOME/ldv-core;
LDV_CORE_EXEC=$LDV_CORE_DIR/ldv-core;

KERNEL_LEVEL=0;

if [ "$1" == "--driver-kernel" ]; then
	KERNEL_LEVEL=1;
else
	DRIVER_ABS=`readlink -f $1`;
	if [ $? -ne 0 ]; then
		echo "ldv-task: ERROR: Can't find abs-path for driver.";
		exit 1;
	fi;
fi;
	
if [ $# -lt 3 ]; then
	echo "ldv-task: ERROR: USAGE: ldv-task driver workdir=wordir env:rule,rule... env:rule,rule... ...";
	exit 1;
fi;


USER_WORKDIR=`echo $2 | sed 's/workdir=//'`
if [ ! -d "$USER_WORKDIR" ]; then
	echo "ldv-task: ERROR: Workdir not exists: \"$WORK_DIR\".";
else
	WORK_DIR=`readlink -f $USER_WORKDIR`;
fi;
echo "ldv-task: INFO: temp workdir: $WORK_DIR";
# all temp dirs created... 
k=1;
tid=1;
for i in $@; do
	if [ $k -eq 1 ]; then
		k=`expr $k + 1`;
		continue;	
	elif [ -n "$USER_WORKDIR" -a $k -eq 2 ]; then 
		k=`expr $k + 1`;
		continue; 
	fi;
	echo -e "ldv-task: INFO: $i";
	# create dir for this stage
	WORK_DIR_LOCAL=$WORK_DIR/$tid;
	mkdir $WORK_DIR_LOCAL;
	if [ $? -ne 0 ]; then
		echo "ldv-task: ERROR: can not create environment-dir from task: \"$WORK_DIR_LOCAL\".";
		unset WORK_DIR_LOCAL;
		k=`expr $k + 1`;
		tid=`expr $tid + 1`;
		exit 1;
	fi;
	# get KERNELDIR for this environment;
	# kernel-manager return path if kernel-environment exists and correct prepared
	ENV_ID=`echo $i | sed 's/:.*//'`;
	rulemodels=`echo $i | sed 's/.*://'`;
	echo "ldv-task: DEBUG: rulemodels: $rulemodels";
	if [ ! -n "$rulemodels" ]; then
		echo "ldv-task: ERROR: rulemodels after \":\" is null. Please, setup it.";
		unset ENV_ID;
		unset KERNEL_PATH;
		unset WORK_DIR_LOCAL;
		k=`expr $k + 1`;
		tid=`expr $tid + 1`;
		exit 1;
	fi;
	echo "ldv-task: INFO: env_id: $ENV_ID";
	echo "ldv-task: INFO: workdir: $WORK_DIR_LOCAL";
	KERNEL_PATH=`$LDV_KMANAGER getpath $ENV_ID`;
	if [ $? -ne 0 ]; then
		echo "ldv-task: ERROR: ldv-kmanager return error for this environment: \"$KERNEL_PATH\".";
		unset ENV_ID;
		unset KERNEL_PATH;
		unset WORK_DIR_LOCAL;
		k=`expr $k + 1`;
		tid=`expr $tid + 1`;
		exit 1;
	fi;
#	WORK_DIR_NEXT_INSTRUMENT=$WORK_DIR_LOCAL/lvc_tempdir;
#	mkdir $WORK_DIR_NEXT_INSTRUMENT;
#	if [ $? -ne 0 ]; then
#		echo "ldv-task: ERROR: can not create environment-dir from task: \"$WORK_DIR_NEXT_INSTRUMENT\".";
#		unset WORK_DIR_LOCAL;
#		unset WORK_DIR_NEXT_INSTRUMENT;
#		k=`expr $k + 1`;
#		tid=`expr $tid + 1`;
#		exit 1;
#	fi;


	echo "ldv-task: DEBUG: **************** Try to call LDV-core *****************";
	if [ $KERNEL_LEVEL -eq 0 ]; then
		echo "WORK_DIR=$WORK_DIR_LOCAL $LDV_CORE_EXEC --env=$KERNEL_PATH --driver=$DRIVER_ABS --rule-models=$rulemodels;";
		WORK_DIR=$WORK_DIR_LOCAL $LDV_CORE_EXEC --env=$KERNEL_PATH --driver=$DRIVER_ABS --rule-models=$rulemodels;
	else
		echo "WORK_DIR=$WORK_DIR_LOCAL $LDV_CORE_EXEC --env=$KERNEL_PATH --driver-kernel --rule-models=$rulemodels;";
		WORK_DIR=$WORK_DIR_LOCAL $LDV_CORE_EXEC --env=$KERNEL_PATH --driver-kernel --rule-models=$rulemodels;
	fi;

	if [ $? -ne 0 ]; then
		echo "ldv-task: ERROR: ldv-core failed.";
	fi;
	unset ENV_ID;
	unset KERNEL_PATH;
	unset WORK_DIR_LOCAL;
#	unset WORK_DIR_NEXT_INSTRUMENT;
	k=`expr $k + 1`;
	tid=`expr $tid + 1`;
done;




