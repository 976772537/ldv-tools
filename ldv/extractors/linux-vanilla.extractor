#!/bin/bash


LDV_HOME=`readlink -f \`dirname $0\`/../../`;
USAGE_STRING="LDV_DEBUG=loglevel linux-vanilla.extractor descriptor";
LOG_PREFIX="vanilla-extractor: ";
source $LDV_HOME/shared/sh/log.sh;


XGCC=`echo $LDV_HOME | sed 's/\//\\\\\//g'`"\\/cmd-utils\\/as_gcc";
BCE_XGCC=`echo $LDV_HOME | sed 's/\//\\\\\//g'`"\\/build-cmd-extractor\\/bce_gcc";


ldv_print "NORMAL: Linux Vanilla extractor.";

#
# extractor kernel-description
#

if [ ! -f "$1" ]; then
	ldv_print "ERROR: can't find description file \"$1\".";
	exit 1;
fi;

# enable tar verbosity only for LDV_DEBUG=100
if [ $LDV_DEBUG -lt 100 ]; then
	TAR_VERBOSITY=
else
	TAR_VERBOSITY=v
fi;

# read field from description;
DSCR_SOURCE=`cat $1 | grep ^source |  sed 's/^source=//'`;
DSCR_DEST=`cat $1 | grep ^dest |  sed 's/^dest=//'`;
DSCR_OPTIONS=`cat $1 | grep ^options |  sed 's/^options=//'`;

# test kernel source type:
mkdir $DSCR_DEST;
if [ $? -ne 0 ]; then
        ldv_print "ERROR: Failed to create destination dir: \"$DSCR_DEST\"."
        exit 1;
fi;

#
# test format for driver file and unpack driver
#
SOURCE_TYPE=`file -b $DSCR_SOURCE --mime-type`;
if [ $? -ne 0 ]; then 
        ldv_print "ERROR: Failed to get and unpack source: \"$DSCR_SOURCE\"."
        exit 1;
else
	case $SOURCE_TYPE in
	        application/x-bzip2)
	                tar xjpf$TAR_VERBOSITY $DSCR_SOURCE -C $DSCR_DEST;;
	        application/x-gzip)
	                tar xzpf$TAR_VERBOSITY $DSCR_SOURCE -C $DSCR_DEST;;
	        *)
	                ldv_print "ERROR: Unknown source type:\"$SOURCE_TYPE\".";
	                exit 1;;
	esac
	if [ $? -ne 0 ]; then
	        ldv_print "ERROR: Failed to get and unpack source: \"$DSCR_SOURCE\"."
	        exit 1;
	fi;
fi;
# find dir with makefile
KERNEL_MAKEFILE=`find $DSCR_DEST -maxdepth 2 -regex '.*Makefile$'`;
source $LDV_HOME/ldv/extractors/shared/linux-vanilla-redhat.sh;
