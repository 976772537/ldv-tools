#!/bin/sh


LDV_HOME=`readlink -f \`dirname $0\`/../../`;
XGCC=`echo $LDV_HOME | sed 's/\//\\\\\//g'`"\\/cmd-utils\\/as_gcc";


echo "extractor: INFO: Linux Vanilla extractor.";

#
# extractor kernel-description
#

if [ ! -f "$1" ]; then
	echo "extractor: ERROR: can't find description file \"$1\".";
	exit 1;
fi;

# read field from description;
DSCR_SOURCE=`cat $1 | grep ^source |  sed 's/^source=//'`;
DSCR_DEST=`cat $1 | grep ^dest |  sed 's/^dest=//'`;

# test kernel source type:
mkdir $DSCR_DEST;
if [ $? -ne 0 ]; then
        echo "extractor: ERROR: Failed to create destination dir: \"$DSCR_DEST\"."
        exit 1;
fi;

#
# test format for driver file and unpack driver
#
SOURCE_TYPE=`file -b $DSCR_SOURCE --mime-type`;
if [ $? -ne 0 ]; then 
# test - is it internet source?	
#if [ -n "`echo $DSCR_SOURCE | grep ^http://`" ]; then
#	cd $DSCR_DEST;
#	wget $DSCR_SOURCE;
#	if [ $? -ne 0 ];
#	        echo "extractor failed: Failed to get and unpack source: \"$DSCR_SOURCE\"."
#       		exit 1;
#	fi;
#else
        echo "extractor: ERROR: Failed to get and unpack source: \"$DSCR_SOURCE\"."
        exit 1;
#fi;
echo $DSCR_DEST;
else
	case $SOURCE_TYPE in
	        application/x-bzip2)
	                tar xvjpf $DSCR_SOURCE -C $DSCR_DEST;;
	        application/x-gzip)
	                tar xvzpf $DSCR_SOURCE -C $DSCR_DEST;;
	        *)
	                echo "extractor: ERROR: Unknown source type.";
	                exit 1;;
	esac
	if [ $? -ne 0 ]; then
	        echo "extractor: ERROR: Failed to get and unpack source: \"$DSCR_SOURCE\"."
	        exit 1;
	fi;
fi;
# find dir with makefile
KERNEL_MAKEFILE=`find $DSCR_DEST -maxdepth 2 -regex '.*Makefile$'`;
KERNEL_MAKEFILE_ABS=`readlink -f $KERNEL_MAKEFILE`;
if [ $? -ne 0 ]; then
        echo "extractor: ERROR: Can not find makefile."
        exit 1;
fi;
KERNEL_MAKEFILE_DIR=`dirname $KERNEL_MAKEFILE_ABS`;
# prepare it
cd $KERNEL_MAKEFILE_DIR;
make allyesconfig;
if [ $? -ne 0 ]; then
        echo "extractor: ERROR: make allyesconfig failed."
        exit 1;
fi;
make init;
if [ $? -ne 0 ]; then
        echo "extractor: ERROR: make init failed."
        exit 1;
fi;
#
# try to find "scripts/Makefile.build" in kernel source directory
# 
KERNEL_MAKEFILE_BUILD=$KERNEL_MAKEFILE_DIR"/scripts/Makefile.build";
if [ ! -f "$KERNEL_MAKEFILE_BUILD" ]; then
	echo "extractor: ERROR: Can't find kernel makefile: \"$KERNEL_MAKEFILE_BUILD\".";
	exit 1;
fi;
#
# copy Makefile for last recovery...
#
KERNEL_BACKUP_MAKEFILE_BUILD=$KERNEL_MAKEFILE_DIR"/scripts/Makefile.build.bcebackup";
cp $KERNEL_MAKEFILE_BUILD $KERNEL_BACKUP_MAKEFILE_BUILD;
if [ $? -ne 0 ]; then
	echo "extractor: ERROR: Failed to copy Makefile: \"$KERNEL_MAKEFILE_BUILD\" to \"$KERNEL_BACKUP_MAKEFILE_BUILD\".";
	exit 1;
fi;
#
# test if a FILE exists and write permission is granted or not
#
if [ ! -w "$KERNEL_MAKEFILE_BUILD" ]; then
	echo "extractor: ERROR: Kernel Makefile.build: \"$KERNEL_MAKEFILE_BUILD\" -  not writable.";
	exit 1;
fi;

# I.
sed -i -e "s/^cmd_cc_o_c = \$(CC) \$(c_flags) -c -o \$(@D)\/\.tmp_\$(@F) \$</cmd_cc_o_c = $XGCC \$< \$(c_flags) -c -o \$(@D)\/\$(@F) >> \$(BUILDFILE); \$(CC) \$(c_flags) -c -o \$(@D)\/.tmp_\$(@F) \$</g" $KERNEL_MAKEFILE_BUILD;
if [ $? -ne 0 ]; then
	echo "extractor: ERROR: Failed patch (I. stage) Makefile: \"$KERNEL_MAKEFILE_BUILD\".";
	cp $KERNEL_BACKUP_MAKEFILE_BUILD $KERNEL_MAKEFILE_BUILD;
	if [ $? -ne 0 ]; then echo "extractor: ATTENSION: Can't recover Makefile.build !"; fi;
	exit 1;
fi;
# II.
sed -i -e "s/^cmd_link_multi-y = \$(LD) \$(ld_flags) -r -o \$@ \$(link_multi_deps) \$(cmd_secanalysis)/cmd_link_multi-y = $XGCC \$(ld_flags) \$(link_multi_deps) -r -o \$@ >> \$(BUILDFILE); \$(LD) \$(ld_flags) -r -o \$@ \$(link_multi_deps) \$(cmd_secanalysis)/g" $KERNEL_MAKEFILE_BUILD;
if [ $? -ne 0 ]; then
	echo "extractor: ERROR: Failed patch (III. stage) Makefile: \"$KERNEL_MAKEFILE_BUILD\".";
	cp $KERNEL_BACKUP_MAKEFILE_BUILD $KERNEL_MAKEFILE_BUILD;
	if [ $? -ne 0 ]; then echo "extractor: ATTENSION: Can't recover Makefile.build !"; fi;
	exit 1;
fi;

echo "kernel-make-dir=$KERNEL_MAKEFILE_DIR" >> $1;
echo "status=prepared" >> $1;



