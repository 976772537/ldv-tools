TUTORIAL
========

   I. PREPARE
      You should prepare database and environment variables before verification
      start. This procedure is performed only once for each instance of the ldv
      tools. Following subsections describes minimal requirements.

      1. Create a database:
          - Install and configure mysql server and client if they are not
            installed.
          - Make sure that MySQL server is launched.
              # In openSUSE this may be done via command:
              sudo /etc/init.d/mysqld start
          - Connect to the database server as root like this:
              mysql -u root -p rootpassword
          - Create a database for the ldv tools:
              CREATE DATABASE dbname;
          - Create a user for the given database:
              CREATE USER 'dbuser'@'dbhost' IDENTIFIED BY 'dbpass';
          - Add priviledges:
              GRANT ALL PRIVILEGES ON dbname.* TO 'dbuser'@'dbhost' WITH GRANT OPTION;
          - Update privileges:
              FLUSH PRIVILEGES;
          - Create the ldv tools tables:
              mysql -udbuser -pdbpass -hdbhost dbname < \
              INSTALL_DIR/ldv-manager/results_schema.sql

      2. Update the environment variable PATH (if you do not want to do this
         each time then write it to ~/.bashrc):
           export PATH=$PATH:INSTALL_DIR/bin

      You can create more than one database (step 1) if you do not want to mix
      results from different launches.

      Various tools find the database through environment variables.  Their
      names are LDVDB, LDVUSER, LDVDBPASSWD and LDVDBHOST; the meanings are
      straightforward.


  II. VERIFY DRIVERS

    Verification needs a separate directory, which it pollutes with files.
    You'll need up to 25 Gb if you run checks on the whole kernel. So, at first,
    create a direcory to work with the ldv tools and change to it:
        mkdir sample
        cd sample


    a)KERNEL OR EXTERNAL DRIVERS

      Now you can verify your drivers by means of the ldv manager tool. Here is
      the simple way to do this:
        - Obtain a kernel that contains your driver or with which your driver
          should work. For example you can download kernels from the
          http://www.kernel.org:
            wget http://www.kernel.org/pub/linux/kernel/v2.6/linux-2.6.36.tar.bz2
          Place the kernel to the ldv tools work directory.

        - If you check external drivers, make sure that they satisfy the
          following requirements:
            * The driver is archived using gzip or bzip2 and has one of the
              following extensions: .tar.bz2, tar.gz, .tgz.
            * Archive should contain: Makefile (written to be compiled with the
              selected kernel) and source code needed by the Makefile.
            * Archive should not contain files, generated by performing builds.
          Place driver archives to be verified to the ldv tools working
          directory.

        - Look at the model database:
            INSTALL_DIR/kernel-rules/model-db.xml
          and select ids for models that are interesting for you. More details
          about verification rules to which models refer you can see in the
          rules database (you may use Treeline tool(not included here)):
            INSTALL_DIR/kernel-rules/rules/DRVRULES_en.trl
          Also you can see rules description on the web site:
            http://www.linuxtesting.org/ldv/online?action=rules

        - Start the verification process:
            * For external drivers:
              ldv-manager tag=current "envs=linux-2.6.31.6.tar.bz2" \
              "drivers=PATH_TO_YOUR_DRIVER_ARCHIEVE" "rule_models=32_7 32_1"
            * For kernel drivers:
              ldv-manager tag=current "envs=linux-2.6.31.6.tar.bz2" \
              kernel_driver=1 "drivers=PATH_TO_YOUR_DRIVERS_DIR" \
              "rule_models=32_7 32_1"

      Additional information on the ldv tools capabilities and options you can
      see there:
        SOURCE_DIR/ldv-manager/README.

      To verify drivers from a Linux kernel git repository see:
        SOURCE_DIR/ldv-git/README.


    b)TEST SETS

      LDV tools have some test sets, mainly to detect regressions.  The sets may
      be found in ldv-tests/regr-tests/test-sets/ directory.  Three test sets
      currently included have the following purpose:

        - "Small" tests are to quickly check if the infrastructure works
        - "General" tests are to track regressions in the Verification Tools
        - "Big" tests are to impose a high, but artificial payload on the tools

      To run test set and upload result of the tests to the database, make sure
      you did "make install-testing" first.  Then, in a separate folder, you may
      just run:

         LDV_TASK_DESCRIPTION="Testing verifier config 1"                \
         LDVDB=dbname LDVUSER=dbuser LDVDBPASSWD=dbpass LDVDBHOST=dbhost \
         ldv-test /prefix/ldv-tests/regr-tests/test-sets/general/regr-task-general

      (The path to regr-task-* should be absolute.  Sorry.)


 III. VIEW RESULTS
      You will find pax archives that contain verification results in the
      directory:
        sample/finished
      after the verification process finished. Note that pax archives have
      names corresponding to the ldv manager invocation. Upload interesting
      arhives to a database:
        LDVDB=dbname LDVUSER=dbuser LDVDBPASSWD=dbpass LDVDBHOST=dbhost \
        ldv-upload finished/PATH_TO_RESULTS_ARCHIVE

      To see statistics on verication restults and some auxiliary information
      you can use a web interface of the statistics server. Detailed information
      on installation and using of the statistics server you can find in:
        SOURCE_DIR/stats-visualizer/README
      After the correct installation and results uploding you can put link
      (with corresponding database name, user name, password and host) to your
      browser address bar:
        http://localhost:8999/stats/index/name/dnname/host/dbhost/user/dbuser/password/dbpass

      ldv-upload script will also show this address at the end of uploading.

      To provide better experience, you may add descriptions to distinguish
      different tasks from each other.  To use this, invoke ldv-upload with the
      following env. variable:
        LDV_TASK_DESCRIPTION="Test config 2" ldv-upload ...

 IV. VERIFICATION AS WEB-SERVICE
     The ldv tools have another way to verify your drivers. You may deploy a web
     service; the same as on linuxtesting.org site:
       http://linuxtesting.org/ldv/online

     To use this variant of tools, follow the following steps:
       - Install the ldv online. For more info see:
           SOURCE_DIR/ldv-online/README
       - Follow link:
           http://localhost/ldv_online_service.php

